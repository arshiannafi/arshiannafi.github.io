{"version":3,"file":"component---src-templates-list-posts-for-tag-tsx-85f34cc2e77fe239788e.js","mappings":"0JA8EA,UAnDwB,SAACA,GACrB,IAAOC,EAAOD,EAAME,YAAbD,IACP,EAA4BD,EAAMG,KAAKC,kBAAhCC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,WAERC,EAAYF,EAAMG,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,KAAKC,WAAW,aACvEC,EAAYT,EAAMG,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,KAAKC,WAAW,aAEvEE,GAAU,oBACZ,4BACaT,EADb,yBAC6C,qBAAKL,EAAL,KAD7C,sBAC6E,QAAC,KAAD,CAAMe,GAAG,SAAT,YAD7E,MAGA,2BAAcF,EAAUG,OAAxB,SAA2D,IAArBH,EAAUG,OAAe,GAAK,KAApE,OACA,kBACKH,EAAUI,KAAI,YAAa,IAAXR,EAAU,EAAVA,KACNE,EAAQF,EAAKC,YAAbC,KACAO,EAAaT,EAAKC,YAAlBQ,UACP,OACI,cAAIC,IAAKR,IACL,QAAC,KAAD,CAAMI,GAAIJ,GAAOO,SAKjC,2BAAcZ,EAAUU,OAAxB,SAA2D,IAArBV,EAAUU,OAAe,GAAK,KAApE,OACA,kBACKV,EAAUW,KAAI,YAAa,IAAXR,EAAU,EAAVA,KACNE,EAAQF,EAAKC,YAAbC,KACAO,EAAaT,EAAKC,YAAlBQ,UACP,OACI,cAAIC,IAAKR,IACL,QAAC,KAAD,CAAMI,GAAIJ,GAAOO,SAOrC,OACI,oBACI,QAAC,IAAD,MACI,gBAAME,QAAQ,WACd,gBAAMC,KAAK,WAAWP,QAAQ,yCAC9B,8BAAcd,EAAd,oBACA,gBAAMqB,KAAK,cACLP,QAAO,+BAAiCd,MAElD,QAAC,IAAD,CAAYc,QAASA","sources":["webpack://website/./src/templates/ListPostsForTag.tsx"],"sourcesContent":["/* @jsx jsx */\nimport {jsx} from \"@emotion/react\"\n\nimport {Helmet} from \"react-helmet\"\nimport {Link, graphql} from \"gatsby\"\n\nimport PageLayout from \"../components/PageLayout\";\n\ninterface TagsProps {\n    pageContext: {\n        tag: string;\n    };\n    data: {\n        allMarkdownRemark: {\n            totalCount: number;\n            edges: {\n                node: {\n                    frontmatter: {\n                        pageTitle: string;\n                        slug: string;\n                    }\n                }\n            }[];\n        }\n    }\n}\n\nconst ListPostsForTag = (props: TagsProps) => {\n    const {tag} = props.pageContext\n    const {edges, totalCount} = props.data.allMarkdownRemark\n\n    const postEdges = edges.filter(edge => edge.node.frontmatter.slug.startsWith(\"/posts\"))\n    const pageEdges = edges.filter(edge => edge.node.frontmatter.slug.startsWith(\"/pages\"))\n\n    const content = <div>\n        <p>\n            Showing {totalCount} results for the tag <b>\"{tag}\"</b>. See the list of <Link to=\"/tags\">all tags</Link>.\n        </p>\n        <p>Pages ({`${pageEdges.length} page${pageEdges.length === 1 ? \"\" : \"s\"}`}):</p>\n        <ul>\n            {pageEdges.map(({node}) => {\n                const {slug} = node.frontmatter\n                const {pageTitle} = node.frontmatter\n                return (\n                    <li key={slug}>\n                        <Link to={slug}>{pageTitle}</Link>\n                    </li>\n                )\n            })}\n        </ul>\n        <p>Posts ({`${postEdges.length} post${postEdges.length === 1 ? \"\" : \"s\"}`}):</p>\n        <ul>\n            {postEdges.map(({node}) => {\n                const {slug} = node.frontmatter\n                const {pageTitle} = node.frontmatter\n                return (\n                    <li key={slug}>\n                        <Link to={slug}>{pageTitle}</Link>\n                    </li>\n                )\n            })}\n        </ul>\n    </div>\n\n    return (\n        <div>\n            <Helmet>\n                <meta charSet=\"utf-8\"/>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n                <title>Tags: {tag} | Arshi Annafi</title>\n                <meta name=\"description\"\n                      content={`List of all pages with tag: ${tag}`}/>\n            </Helmet>\n            <PageLayout content={content}/>\n        </div>\n    )\n}\n\nexport default ListPostsForTag\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___last_modified], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            slug\n            pageTitle\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["props","tag","pageContext","data","allMarkdownRemark","edges","totalCount","postEdges","filter","edge","node","frontmatter","slug","startsWith","pageEdges","content","to","length","map","pageTitle","key","charSet","name"],"sourceRoot":""}