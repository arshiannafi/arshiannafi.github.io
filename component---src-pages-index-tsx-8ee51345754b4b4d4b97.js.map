{"version":3,"file":"component---src-pages-index-tsx-8ee51345754b4b4d4b97.js","mappings":"oNAEO,IAAMA,EAAS,2CAITC,EAAc,sCAIdC,EAAgB,yCAIhBC,EAAI,qCAIJC,EAAO,2CC0DpB,EA1CqB,SAACC,GAClB,IAAOC,EAAQD,EAARC,KACP,OAAO,eAAKC,IAAG,CAAGC,EAAaA,EAAhB,SACX,eAAKD,IAAKC,IACN,QAAC,IAAD,CACIC,MAAOH,EAAKI,YAAYC,YAAYC,gBAAgBH,MACpDI,IAAKP,EAAKI,YAAYI,eACtBC,MAAO,CAACC,MAAO,SACfC,SAAU,CAACC,UAAW,eAG9B,eAAKX,IAAKC,IACN,oBACI,QAAC,KAAD,CAAMW,GAAIb,EAAKI,YAAYU,KAAMC,IAAKf,EAAKI,YAAYU,OACnD,iBACKd,EAAKI,YAAYY,cAI9B,mBACKhB,EAAKI,YAAYa,kBAEtB,oBACI,iCACcjB,EAAKI,YAAYc,oBAD/B,OAIJ,oBACI,8BACW,IACNlB,EAAKI,YAAYe,KAAKC,KAAI,SAAAC,GACvB,OAAO,QAAC,KAAD,CAAMR,GAAE,SAAWQ,EAAOpB,IAAKC,EACzBa,IAAQf,EAAKI,YAAYU,KAAtB,QAAkCO,GAC7CA,WCjEtB,IAAMC,EAAa,4ECA1B,ECkB0B,WAGtB,IAAIC,GAAS,eAAKtB,IAAKC,IACnB,mCACA,wCAQJ,OAAOqB,GC/BJ,IAAMC,EAAU,+DC2EvB,EAhCkB,SAACzB,GACf,IAAO0B,EAAQ1B,EAAR0B,KAEDF,GAAS,QAAC,EAAD,MAETG,GAAU,oBACZ,sCACCD,EAAKE,kBAAkBC,MAAMR,KAAI,SAAAS,GAC9B,OAAO,QAAC,EAAD,CAAcd,IAAKc,EAAK7B,KAAKI,YAAYU,KAAMd,KAAM6B,EAAK7B,WAErE,eAAKC,IAAKC,IACN,QAAC,KAAD,CAAMW,GAAI,WAAV,cAIR,OACI,qBACI,QAACiB,EAAA,EAAD,MACI,gBAAMC,QAAQ,WACd,gBAAMC,KAAK,WAAWN,QAAQ,yCAC9B,sCACA,gBAAMM,KAAK,cACLN,QAAQ,sKAElB,QAACO,EAAA,EAAD,CACIV,OAAQA,EACRG,QAASA","sources":["webpack://website/./src/components/LandingPageTimeline/TimelinePost.styles.ts","webpack://website/./src/components/LandingPageTimeline/TimelinePost.tsx","webpack://website/./src/components/LandingPageHeader/LandingPageHeader.styles.ts","webpack://website/./src/components/LandingPageHeader/index.ts","webpack://website/./src/components/LandingPageHeader/LandingPageHeader.tsx","webpack://website/./src/styles/LandingPage.styles.ts","webpack://website/./src/pages/index.tsx"],"sourcesContent":["import {css} from \"@emotion/react\";\n\nexport const container = css`\n    margin: 0 0 48px 0;\n`;\n\nexport const imageContainer = css`\n    margin: 8px 0;\n`;\n\nexport const contentContainer = css`\n    padding: 0 16px;\n`;\n\nexport const flex = css`\n    display: flex;\n`;\n\nexport const tagLink = css`\n    margin: 0 8px 0 0;\n`;\n","/* @jsx jsx */\nimport {jsx} from \"@emotion/react\"\n\nimport * as React from \"react\";\nimport Img from \"gatsby-image\";\nimport {Link} from \"gatsby\";\n\nimport * as styles from \"./TimelinePost.styles\"\n\ninterface TimelinePostProps {\n    node: {\n        frontmatter: {\n            slug: string\n            headerImage: {\n                childImageSharp: {\n                    fluid: {\n                        base64: string;\n                        aspectRatio: number;\n                        src: string;\n                        srcSet: string;\n                        sizes: string;\n                    }\n                }\n            }\n            pageTitle: string\n            pageDescription: string\n            headerImageAlt: string\n            initially_published: string\n            last_modified: string\n            tags: string[]\n        }\n    }\n}\n\nconst TimelinePost = (props: TimelinePostProps) => {\n    const {node} = props;\n    return <div css={[styles.flex, styles.container]}>\n        <div css={styles.imageContainer}>\n            <Img\n                fluid={node.frontmatter.headerImage.childImageSharp.fluid}\n                alt={node.frontmatter.headerImageAlt}\n                style={{width: \"150px\"}}\n                imgStyle={{objectFit: \"contain\"}}\n            />\n        </div>\n        <div css={styles.contentContainer}>\n            <div>\n                <Link to={node.frontmatter.slug} key={node.frontmatter.slug}>\n                    <b>\n                        {node.frontmatter.pageTitle}\n                    </b>\n                </Link>\n            </div>\n            <div>\n                {node.frontmatter.pageDescription}\n            </div>\n            <div>\n                <small>\n                    Updated: {node.frontmatter.initially_published}.\n                </small>\n            </div>\n            <div>\n                <small>\n                    Tags: {\" \"}\n                    {node.frontmatter.tags.map(tag => {\n                        return <Link to={`/tags/${tag}`} css={styles.tagLink}\n                                     key={`${node.frontmatter.slug}/tag/${tag}`}>\n                            {tag}\n                        </Link>\n                    })}\n                </small>\n            </div>\n        </div>\n    </div>\n}\n\nexport default TimelinePost;\n","import {css} from \"@emotion/react\";\n\nexport const headerSection = css`\n    text-align: center;\n    padding: 64px 0;\n    \n    > h1, h2 {\n        margin: 0;\n    }\n`;\n\nexport const headerWrapper = css`\n    padding: 64px 0;\n`;\n\nexport const headerSection2Wrapper = css`\n    display: flex;\n    flex-wrap: wrap;\n    font-family: monospace;\n    justify-content: center;\n\n    h1 {\n        font-size: 3em;\n        margin: 0;\n    }\n\n    h2 {\n        font-size: 2em;\n        margin: 0;\n    }\n`;\n\nexport const center = css`\n    margin: 0;\n    text-align: center;\n`;\n\nexport const remove = css`\n    background: #FBE9EB;\n`;\n\nexport const removedWord = css`\n    background: #FAC5CD;\n`;\n\nexport const added = css`\n    background: #ECFDF0;\n`;\n\nexport const addedWord = css`\n    background: #C7F0D2;\n`;\n","import LandingPageHeader from \"./LandingPageHeader\";\n\nexport default LandingPageHeader;\n","/* @jsx jsx */\nimport {jsx} from \"@emotion/react\";\n\nimport * as React from \"react\";\nimport * as styles from \"./LandingPageHeader.styles\";\n\nconst showNameCorrection = false;\n\nconst CorrectedNameHeader = (): JSX.Element => {\n    return <div css={styles.headerWrapper}>\n        <div css={styles.headerSection2Wrapper}>\n            <div>\n                <h1 css={styles.remove}>- Arshi <span css={styles.removedWord}>A</span>nnafi</h1>\n                <h1 css={styles.added}>+ Arshi <span css={styles.addedWord}>Abda</span>nnafi</h1>\n            </div>\n        </div>\n        <h2 css={styles.center}>Software Engineer</h2>\n    </div>\n}\n\nconst LandingPageHeader = (): JSX.Element => {\n\n\n    let header = <div css={styles.headerSection}>\n        <h1>Arshi Annafi</h1>\n        <h2>Software Engineer</h2>\n    </div>\n\n\n    if (showNameCorrection) {\n        header = <CorrectedNameHeader/>\n    }\n\n    return header;\n}\n\nexport default LandingPageHeader;\n","import {css} from \"@emotion/react\";\n\nexport const rightAlign = css`\n    display: flex;\n    justify-content: flex-end;\n`;\n","/* @jsx jsx */\nimport {jsx} from \"@emotion/react\"\n\nimport * as React from \"react\"\nimport {Helmet} from \"react-helmet\"\nimport {graphql, Link} from \"gatsby\"\n\nimport PageLayout from \"../components/PageLayout\";\nimport TimelinePost from \"../components/LandingPageTimeline/TimelinePost\";\nimport LandingPageHeader from \"../components/LandingPageHeader\";\n\nimport * as styles from \"../styles/LandingPage.styles\";\n\ninterface IndexPageProps {\n    data: {\n        allMarkdownRemark: {\n            edges: {\n                node: {\n                    frontmatter: {\n                        slug: string;\n                        headerImage: {\n                            childImageSharp: {\n                                fluid: {\n                                    base64: string;\n                                    aspectRatio: number;\n                                    src: string;\n                                    srcSet: string;\n                                    sizes: string;\n                                }\n                            }\n                        };\n                        pageTitle: string;\n                        pageDescription: string;\n                        headerImageAlt: string\n                        initially_published: string\n                        last_modified: string\n                        tags: string[]\n                    }\n                }\n            }[]\n        }\n    }\n}\n\n\nconst IndexPage = (props: IndexPageProps) => {\n    const {data} = props;\n\n    const header = <LandingPageHeader/>;\n\n    const content = <div>\n        <h2>Recently updated</h2>\n        {data.allMarkdownRemark.edges.map(edge => {\n            return <TimelinePost key={edge.node.frontmatter.slug} node={edge.node}/>\n        })}\n        <div css={styles.rightAlign}>\n            <Link to={\"/recent\"}>See more</Link>\n        </div>\n    </div>\n\n    return (\n        <main>\n            <Helmet>\n                <meta charSet=\"utf-8\"/>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n                <title>Arshi Annafi</title>\n                <meta name=\"description\"\n                      content=\"Arshi Annafi | Software Engineer | A place where I share my journey in software development and technology, showcase projects, and post articles and resources.\"/>\n            </Helmet>\n            <PageLayout\n                header={header}\n                content={content}\n            />\n        </main>\n    )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: {fields: frontmatter___initially_published, order: DESC}, limit: 10) {\n      edges {\n        node {\n          frontmatter {\n            slug\n            headerImage {\n              childImageSharp {\n                fluid(maxHeight: 100) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            headerImageAlt\n            pageTitle\n            pageDescription\n            initially_published\n            last_modified(formatString: \"YYYY-MM-DD\")\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["container","imageContainer","contentContainer","flex","tagLink","props","node","css","styles","fluid","frontmatter","headerImage","childImageSharp","alt","headerImageAlt","style","width","imgStyle","objectFit","to","slug","key","pageTitle","pageDescription","initially_published","tags","map","tag","headerSection","header","rightAlign","data","content","allMarkdownRemark","edges","edge","Helmet","charSet","name","PageLayout"],"sourceRoot":""}