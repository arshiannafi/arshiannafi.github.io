{"version":3,"file":"component---src-pages-markdown-remark-frontmatter-slug-tsx-2fd645c405b7301ff676.js","mappings":"8NAGO,IAAMA,EAAe,0CAIfC,GAAcC,EAAAA,EAAAA,IAAH,6BAEFC,EAAAA,EAFE,+DCJXC,GAAQF,EAAAA,EAAAA,IAAH,oBACMC,EAAAA,EADN,qGCoBlB,EAZa,SAACE,GACV,IAAOC,EAAQD,EAARC,KAEP,OAAO,mBACFA,EAAKC,KAAI,SAAAC,GACN,OAAO,QAAC,KAAD,CAAMC,GAAE,SAAWD,EAAOE,IAAKF,EAAKN,IAAKS,GAC3CH,Q,qkBCLjB,IAYMI,EAAkB,SAACP,GACrB,IAAOQ,EAAQR,EAARQ,KACP,OAAO,QAAC,KAAD,CAAMJ,GAAE,uBAAyBI,GAAjC,iCAmGX,EAjE6B,SAACR,GAC1B,IAjDmBS,EACbC,EAiDCC,EADQX,EAARY,KACAD,eACAE,EAAqBF,EAArBE,YAAaC,EAAQH,EAARG,KAEdC,GAAU,oBACZ,oBACI,kBAAKF,EAAYG,WAChBH,EAAYI,QAAiC,KAAvBJ,EAAYI,SAC/B,iBACKJ,EAAYI,SAGrB,oBACI,sCACmBJ,EAAYK,iBAGnC,oBACI,sBACI,QAACX,EAAD,CAAiBC,KAAMK,EAAYL,WAI/C,eAAKX,IAAKsB,EAAAA,MACV,oBACI,QAAC,IAAD,CACIC,MAAOP,EAAYQ,YAAYC,gBAAgBF,MAC/CG,IAAKV,EAAYW,eACjBd,OA7EOD,EA6EcI,EAAYQ,YAAYC,gBAAgBF,MAAMX,YA5EzEC,EAAQ,GAIH,EAAP,KAAWA,GAAX,GAFAD,GAAe,EAEf,CAAkBgB,UAAW,SAG7B,CAAkBA,UAAW,WAsErBC,SAAU,CAACC,UAAW,aAEzBd,EAAYe,qBAAqBC,OAAS,IACvC,eAAKhC,IAAKS,IACN,kCAAkBO,EAAYe,yBAI1C,eAAK/B,IAAKsB,EAAAA,MACV,eACIW,UAAU,oBACVC,wBAAyB,CAACC,OAAQlB,GAClCjB,IAAKS,KAET,eAAKT,IAAKsB,EAAAA,MACV,QAAC,EAAD,CAAMlB,KAAMY,EAAYZ,QACxB,eAAKJ,IAAKoC,EAAAA,MACV,sBACI,QAAC1B,EAAD,CAAiBC,KAAMK,EAAYL,SAI3C,OACI,oBACI,QAAC0B,EAAA,EAAD,MACI,gBAAMC,QAAQ,WACd,gBAAMC,KAAK,WAAWrB,QAAQ,yCAC9B,qBAAQF,EAAYG,UAApB,oBACA,gBAAMoB,KAAK,cAAcrB,QAASF,EAAYwB,oBAElD,QAACC,EAAA,EAAD,CAAYvB,QAASA","sources":["webpack://website/./src/PageComponents/MarkdownPages/MarkdownPages.styles.ts","webpack://website/./src/components/Tags/Tags.styles.ts","webpack://website/./src/components/Tags/Tags.tsx","webpack://website/./src/pages/{MarkdownRemark.frontmatter__slug}.tsx"],"sourcesContent":["import {css} from \"@emotion/react\";\nimport {greyLight} from \"../../styles\";\n\nexport const imageSourceText = css`\n    text-align: right;\n`;\n\nexport const markdownDiv = css`\n    .language-text {\n        background: ${greyLight};\n        color: initial;\n        padding: 0.2em 0.4em;\n        text-shadow: initial;\n    }\n`;\n","import {css} from \"@emotion/react\";\nimport {greyLight} from \"../../styles\";\n\nexport const links = css`\n    background-color: ${greyLight};\n    border-radius: 4px;\n    display: inline-block;\n    margin-inline-end: 8px;\n    margin-bottom: 8px;\n    padding: 0 8px;\n`;\n","/* @jsx jsx */\nimport {jsx} from \"@emotion/react\"\n\nimport {Link} from \"gatsby\";\n\nimport * as styles from \"./Tags.styles\";\n\ninterface TagsProps {\n    tags: string[]\n}\n\nconst Tags = (props: TagsProps) => {\n    const {tags} = props;\n\n    return <div>\n        {tags.map(tag => {\n            return <Link to={`/tags/${tag}`} key={tag} css={styles.links}>\n                {tag}\n            </Link>\n        })}\n    </div>\n}\n\nexport default Tags\n","/* @jsx jsx */\nimport {jsx} from \"@emotion/react\"\n\nimport {Helmet} from \"react-helmet\"\nimport {graphql, Link} from \"gatsby\"\nimport PageLayout from \"../components/PageLayout\";\nimport Img from \"gatsby-image\";\n\nimport * as styles from \"../PageComponents/MarkdownPages/MarkdownPages.styles\";\nimport {spacing16, spacing32} from \"../styles\";\nimport Tags from \"../components/Tags/Tags\";\n\nconst getImageStyle = (aspectRatio: number) => {\n    const style = {};\n\n    if (aspectRatio <= 1) {\n        // Portrait image\n        return {...style, maxHeight: \"800px\"}\n    } else {\n        // Landscape image\n        return {...style, maxHeight: \"405px\"}\n    }\n}\n\nconst ReportIssueLink = (props: { slug: string }) => {\n    const {slug} = props;\n    return <Link to={`/report-issue/?page=${slug}`}>\n        Report an issue on this page\n    </Link>;\n}\n\ninterface BlogPageTemplateProps {\n    data: {\n        markdownRemark: {\n            frontmatter: {\n                headerImage: {\n                    childImageSharp: {\n                        fluid: {\n                            base64: string;\n                            aspectRatio: number;\n                            src: string;\n                            srcSet: string;\n                            sizes: string;\n                        }\n                    }\n                };\n                headerImageAlt: string;\n                headerImageCopyright: string;\n                slug: string;\n                pageTitle: string;\n                pageDescription: string;\n                author: string;\n                last_modified: string;\n                tags: string[];\n            }\n            html: string;\n        }\n    };\n}\n\nconst MarkdownPageTemplate = (props: BlogPageTemplateProps) => {\n    const {data} = props;\n    const {markdownRemark} = data\n    const {frontmatter, html} = markdownRemark\n\n    const content = <div>\n        <div>\n            <h1>{frontmatter.pageTitle}</h1>\n            {frontmatter.author && frontmatter.author !== \"\" &&\n                <p>\n                    {frontmatter.author}\n                </p>\n            }\n            <div>\n                <small>\n                    Last updated: {frontmatter.last_modified}\n                </small>\n            </div>\n            <div>\n                <small>\n                    <ReportIssueLink slug={frontmatter.slug}/>\n                </small>\n            </div>\n        </div>\n        <div css={spacing32}/>\n        <div>\n            <Img\n                fluid={frontmatter.headerImage.childImageSharp.fluid}\n                alt={frontmatter.headerImageAlt}\n                style={getImageStyle(frontmatter.headerImage.childImageSharp.fluid.aspectRatio)}\n                imgStyle={{objectFit: \"contain\"}}\n            />\n            {frontmatter.headerImageCopyright.length > 0 &&\n                <div css={styles.imageSourceText}>\n                    <small>Image by: {frontmatter.headerImageCopyright}</small>\n                </div>\n            }\n        </div>\n        <div css={spacing32}/>\n        <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{__html: html}}\n            css={styles.markdownDiv}\n        />\n        <div css={spacing32}/>\n        <Tags tags={frontmatter.tags}/>\n        <div css={spacing16}/>\n        <small>\n            <ReportIssueLink slug={frontmatter.slug}/>\n        </small>\n    </div>\n\n    return (\n        <div>\n            <Helmet>\n                <meta charSet=\"utf-8\"/>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n                <title>{frontmatter.pageTitle} | Arshi Annafi</title>\n                <meta name=\"description\" content={frontmatter.pageDescription}/>\n            </Helmet>\n            <PageLayout content={content}/>\n        </div>\n    )\n}\n\nexport default MarkdownPageTemplate;\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        headerImage {\n          childImageSharp {\n            fluid(maxHeight: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        headerImageAlt\n        headerImageCopyright\n        slug\n        pageTitle\n        pageDescription\n        author\n        last_modified(formatString: \"YYYY-MM-DD\")\n        tags\n      }\n    }\n  }\n`\n"],"names":["imageSourceText","markdownDiv","css","greyLight","links","props","tags","map","tag","to","key","styles","ReportIssueLink","slug","aspectRatio","style","markdownRemark","data","frontmatter","html","content","pageTitle","author","last_modified","spacing32","fluid","headerImage","childImageSharp","alt","headerImageAlt","maxHeight","imgStyle","objectFit","headerImageCopyright","length","className","dangerouslySetInnerHTML","__html","spacing16","Helmet","charSet","name","pageDescription","PageLayout"],"sourceRoot":""}